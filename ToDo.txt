subdivide to bezier patches
use bezier patches instead of subtriangles


======================================================================

To implement in UI:
k_nTHREADS = 1;

k_bUSE_KDTREE = true;
k_bSHOW_KDTREE = false;
k_nMAX_LEVEL_OF_TREE = 20;
k_nMIN_NUMBER_OF_TRIANGLES_TO_SPLIT = 6;
k_nMAX_SPLITS_OF_NODE = 10;

k_nNUMBER_OF_SUBDIVISIONS = 0;

Avarage Time to render/ FPS - "realtime"
Time to render smooth       - "render"

======================================================================
To investigate:
How can I enchance shading?
Solve problem with crash when starting a render while in realtime mode.

======================================================================
To add -
Save image from application
antialiasing

======================================================================

fix smoothed normals - should refactor

Still a lot of misses for bezier surface


postprocess the rendered image to fill the not rendered images


Things to do:

Render biggest bunny
Interface
Load complex structures
Intersect the complex surfaces
Save to file
Move camera

================================================================================
normal
RayTracer::Render
CMesh::Intersect
CMesh::IntersectKDTree
CKDTreeNode::Intersect(ray, intersectionInfo, bDebug);
CTriangle::IntersectSubdevidedTriangles
CTriangle::Intersect(ray, intersectionInfo, aSubTriangles)
IntersectSubdevidedTriangles(ray, intersectionInfo, aSubTriangles, NULL, bDebug);
CSubTriangle::Intersect(ray, intersectionInfo,bDebug)
CUtils::IntersectTriangle(ray, intersectionInfo, m_vA, m_vB, m_vC, m_vABar, m_vBBar, m_vCBar)
CUtils::IntersectTriangle(	i_Ray, io_IntersectionInfo, i_vA, i_vB, i_vC))

================================================================================
bezier
RayTracer::Render
CMesh::Intersect
CMesh::IntersectKDTree
CTriangle::Intersect(ray, intersectionInfo, *m_pTriangles);
CTriangle::IntersectHighQuality(ray, intersectionInfo, aSubTriangles, bDebug);
|CTriangle::IntersectSubdevidedTriangles(ray, intersectionInfo, aSubTriangles, NULL, bDebug)
|CTriangle::IntersectHighQuality(ray, intersectionInfo, bDebug);
intersectSimpleBezierTriangle(ray, intersectionInfo, SubTriangle, aPointsToCheck[i], 5, bDebug)
intersectSimpleBezierTriangle(ray, intersectionInfo, barCoord, iterations, bDebug);
